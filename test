import { RouterModule } from '@angular/router';

@NgModule({
  imports: [
  ...
  RouterModule.forRoot([
    // 若app启动地址为http://localhost:8100/，则访问LoginPage
    { path: '', component: LoginPage },

    // 访问http://localhost:8100/main，则访问mainPage
    { path: 'main', component: mainPage },

    // loadChildren异步加载，文件路径是相对路径
    // 访问http://localhost:8100/register，才去加载资源
    // 建议app一级页面使用component，二级页面均使用loadChildren
    {path: 'register', loadChildren: './pages/login/register/register.module#RegisterPageModule'}

     // 访问http://localhost:8100/detail/2，则访问DetailPage，id为动态参数
     path: 'detail/:id', component: DetailPage },

     // 访问main/666跳转到mainPage
     path: 'main/666', redirectTo: '/main',  pathMatch: 'full' },

     // pathMatch: 'prefix'，访问main/666、main/xxx、main/abc，均跳转到mainPage
     path: 'main', redirectTo: '/main',  pathMatch: 'prefix' },

     // 路径匹配不到则访问NotFoundPage
     path: '**', component: NotFoundPage },

     // children
     // 访问/tabs跳转到TabsPage，此配置只是一个底部导航。也相当于web网站的顶部导航或左侧导航
     // 所以需要访问/tabs/demo，才会显示导航和内容
     // 访问/tabs/tab1，显示导航和Tab1Page，访问/tabs/tab1/test，显示导航和testPage，test模块异步加载
    {
        path: 'tabs',
        component: TabsPage,
        children: [
            {path: 'demo', component: DemoPage},
            {path: 'tab1', component: Tab1Page},
            {path: 'tab1/test', loadChildren: './pages/tab1/test/test.module#TestPageModule'},
            {path: 'mine', component: MinePage}
        ]
    }

  ])
  ],
})